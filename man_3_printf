.\" Man page generated by man(1) via txt2man
.TH PRINTF 1 "March 2024" "1.0" "printf man page"
.SH NAME
_printf \- Custom printf function
.SH SYNOPSIS
.nf
\fB#include <stdio.h>\fR
\fB#include <stdarg.h>\fR
\fB#include <unistd.h>\fR
\fB#include <stdlib.h>\fR
\fB#include "main.h"\fR
.sp
\fBint _printf(const char *format, ...);\fR
.fi
.SH DESCRIPTION
The \fB_printf\fR function produces output according to a format and writes it to the standard output (stdout). This function is similar to the standard \fBprintf\fR function in the C library, but it is customized to support only a subset of format specifiers.
.SH ARGUMENTS
\fBformat\fR: A pointer to a null-terminated string that contains the format string. This format string may contain plain characters and format specifiers.
.SH RETURN VALUE
Upon successful completion, the \fB_printf\fR function returns the number of characters printed (excluding the null byte used to terminate output to strings). If an output error is encountered, the function returns -1.
.SH FORMAT SPECIFIERS
The \fB_printf\fR function supports the following format specifiers:
.TP
\fB%c\fR: Prints a single character.
.TP
\fB%s\fR: Prints a string.
.TP
\fB%d\fR, \fB%i\fR: Prints a signed decimal integer.
.TP
\fB%%\fR: Prints a literal percent sign.
If any other character follows %, it will be treated as a plain character and printed as is.
.SH EXAMPLES
.nf
#include "main.h"
.sp
int main(void) {
    char ch = 'A';
    char *str = "Hello, World!";
    int num = 123;
.sp
    _printf("Character: %c\n", ch);
    _printf("String: %s\n", str);
    _printf("Number: %d\n", num);
.sp
    return 0;
}
.fi
.SH SEE ALSO
printf(3), putchar(3), va_start(3), va_arg(3), va_end(3)

